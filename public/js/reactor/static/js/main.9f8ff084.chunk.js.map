{"version":3,"sources":["components/Canvas.jsx","components/DebugInfo.jsx","components/MidiListener.jsx","components/HowTo.jsx","App.js","serviceWorker.js","index.js"],"names":["Canvas","color","note","RandomColor","seed","luminosity","size","octave","concat","drawLissajous","i","n","canvas","document","getElementById","getContext","ctx","clearRect","width","height","beginPath","strokeStyle","_this","Base","x","y","moveTo","radius","window","innerWidth","innerHeight","step","_loop","j","setTimeout","Math","sin","lineTo","stroke","PI","react_default","a","createElement","id","Component","DebugInfo","this","props","debug","style","container","children","position","bottom","left","MidiListener","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","ready","inputs","outputs","midi","midiNote","midiEvents","React","createRef","DEBUG","_this2","WebMidi","enable","err","console","log","setState","length","bindEvents","_this3","input","addListener","e","data","name","bonus","current","ceil","react","components_Canvas","ref","components_DebugInfo","href","HowTo","visibility","toggleVideo","objectSpread","styles","bubble","onClick","video","display","controls","src","type","top","right","padding","cursor","backgroundColor","justifyContent","alignItems","App","className","components_HowTo","components_MidiListener","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f8ff084.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport RandomColor from \"randomcolor\";\n\nclass Canvas extends Component {\n\n    color = note => {\n        return RandomColor({seed: note, luminosity: \"light\"});\n    }\n\n    size = octave => `scale(${octave / 2})`;\n\n    drawLissajous = (i, n) => {\n        let canvas = document.getElementById('drawingCanvas');\n        if (!canvas || !canvas.getContext) {\n            return false;\n        }\n        let ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.beginPath();\n        ctx.strokeStyle = this.color();\n        let Base = {x: canvas.width/2, y: canvas.height/2};\n        ctx.moveTo(Base.x, Base.y);\n        let radius = window.innerWidth > window.innerHeight ? window.innerWidth/4 : window.innerHeight/4;\n\n        let step = 1;\n        for (let j = 0; j <= 2 * Math.PI; j += Math.PI / n / i) {\n            setTimeout(()=>{\n                let x = radius * Math.sin(i * j);\n                let y = radius * Math.sin((i + 1) * j);\n                ctx.lineTo((Base.x + x), (Base.y - y));\n                ctx.stroke();\n            },(10*step));\n            step++;\n        }\n    };\n\n    render() {return (\n            <canvas id=\"drawingCanvas\" width={window.innerWidth} height={window.innerHeight}/>\n        );\n    }\n}\n\nexport default Canvas;","import React, {Component} from 'react';\n\nclass DebugInfo extends Component {\n    render() {\n        if (this.props.debug === true) {\n            return (\n                <div style={style.container}>\n                    {this.props.children}\n                    <p>To setup: Open Audio Midi Setup > Click Window > Show Midi Studio > Enable the IAC driver </p>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default DebugInfo;\n\nconst style = {\n    container: {\n        position: 'absolute',\n        bottom: 0,\n        left: 20,\n        color: '#fff',\n    }\n};","import React, {Component, Fragment} from 'react';\nimport WebMidi from 'webmidi';\nimport DebugInfo from \"./DebugInfo\";\nimport Canvas from \"./Canvas\";\n\nclass MidiListener extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ready: false,\n            inputs: null,\n            outputs: null,\n            midi: null,\n            midiNote: null,\n            note: null,\n            octave: null,\n        }\n        this.midiEvents = React.createRef();\n        this.DEBUG = true;\n    }\n\n    componentDidMount() {\n        WebMidi.enable((err) => {\n\n            if (err) {\n                console.log(\"WebMidi could not be enabled.\", err);\n            } else {\n                this.setState({\n                    ready: true,\n                    inputs: WebMidi.inputs.length\n                });\n                WebMidi.inputs[0] && this.bindEvents();\n            }\n            console.log(WebMidi)\n        }, true);\n    }\n\n    bindEvents() {\n\n        const input = WebMidi.inputs[0];\n\n        input.addListener(\"noteon\", \"all\", e => {\n            this.setState({midi: e.data, midiNote: e.data[1], note: e.note.name, octave: e.note.octave, bonus: e.data[0]});\n            this.midiEvents.current.size(this.state.octave);\n            this.midiEvents.current.color(this.state.midiNote);\n            this.midiEvents.current.drawLissajous(Math.ceil(this.state.midiNote / this.state.octave)/2, Math.ceil(this.state.midiNote * this.state.octave)/20);\n        });\n\n        input.addListener(\"pitchbend\", \"all\", e => {\n            console.log(e);\n        });\n\n        input.addListener(\"noteoff\", \"all\", e => {\n            // this.sizeDown();\n        });\n    }\n\n\n\n    render() {\n        return (\n            <Fragment>\n                <Canvas ref={this.midiEvents}/>\n                <DebugInfo debug={this.DEBUG}>\n                    <h4>{this.state.ready && \"Midi is ready with \" + this.state.inputs + \" inputs\"}</h4>\n                    <h5>{\"Note: \" + this.state.note}</h5>\n                    <h5>{\"Octave: \" + this.state.octave}</h5>\n                    <a href={\"http://djipco.github.io/webmidi/latest/classes/WebMidi.html\"}>Docs</a>\n                </DebugInfo>\n            </Fragment>\n        );\n    }\n}\n\nexport default MidiListener;\n","import React, {Component} from 'react';\n\nclass HowTo extends Component {\n    state = {\n        visibility: false,\n    }\n\n    toggleVideo = () => {\n        console.log('HElloooo');\n        this.setState({visibility: !this.state.visibility})\n    }\n\n    render() {\n        return (\n            <div style={{...styles.bubble}} onClick={() => this.toggleVideo()}>\n                <h1>?</h1>\n                <video style={{...styles.video, display: this.state.visibility ? 'block' : 'none'}} width=\"375\"\n                       height=\"300\" controls>\n                    <source src=\"js/reactor/how_to.mp4\" type=\"video/mp4\"/>\n                </video>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    bubble: {\n        position: 'absolute',\n        top: 20,\n        right: 20,\n        color: '#fff',\n        padding: '10px 40px',\n        cursor: 'pointer'\n    }, video: {\n        position: 'absolute',\n        top: 20,\n        right: 20,\n        backgroundColor: '#fff'\n    }\n\n}\n\nexport default HowTo;","import React from 'react';\nimport Canvas from './components/Canvas';\nimport MidiListener from './components/MidiListener'\nimport HowTo from \"./components/HowTo\";\n\nfunction App() {\n    return (\n        <div style={{...styles}} className=\"App\">\n            <HowTo><h1>?</h1></HowTo>\n            <MidiListener>\n                <Canvas></Canvas>\n            </MidiListener>\n        </div>\n    );\n}\n\n\nconst styles = {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}